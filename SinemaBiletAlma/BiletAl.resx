<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>